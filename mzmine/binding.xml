<?xml version="1.0" encoding="ISO-8859-1"?>
<binding>
    <bind action="begin" type="download">
        <url value="{livesearch.download}"/>
        <query name="task" valueRef="@task"/>
        <query name="user" valueRef="@user"/>
        <compression type="zip"/>

        <download port="flowParams" type="file">
            <query name="resource" value="params"/>
        </download>
        <downloadParams>
            <query name="resource" value="params"/>
        </downloadParams>

        <download port="specone" type="folder">
            <query name="resource" value="specone"/>
        </download>
        <download port="spectwo" type="folder">
            <query name="resource" value="spectwo"/>
        </download>
        <download port="specthree" type="folder">
            <query name="resource" value="specthree"/>
        </download>
        <download port="specfour" type="folder">
            <query name="resource" value="specfour"/>
        </download>
        <download port="specfive" type="folder">
            <query name="resource" value="specfive"/>
        </download>
        <download port="specsix" type="folder">
            <query name="resource" value="specsix"/>
        </download>

        <download port="metadata_table" type="folder">
            <query name="resource" value="metadata_table"/>
        </download>
        <download port="lib" type="folder">
            <query name="resource" value="lib"/>
        </download>
    </bind>

    <bind action="build_batch" tool="build_batch">
        <inputAsRequirement port="flowParams" requirement="flowParams"/>
        <inputAsRequirement port="inputParams" requirement="inputParams"/>
        <productionToOutput port="batch" production="batch"/>
    </bind>

    <bind action="run_mzmine" tool="exec_batch">
        <inputAsRequirement port="inputParams" requirement="inputParams"/>
        <inputAsRequirement port="batch" requirement="batch"/>
        <productionToOutput port="output" production="output"/>
    </bind>

    <bind action="parse_results" tool="parse_results">
        <inputAsRequirement port="output" requirement="output"/>
        <inputAsRequirement port="flowParams" requirement="flowParams"/>
        <productionToOutput port="results" production="results"/>
    </bind>

    <!-- Copy out Intermediate files -->
    <bind action="copy_out_ms1_ms2_mgf" tool="copy_out_ms1_ms2_mgf">
        <inputAsRequirement port="results" requirement="results"/>
        <productionToOutput port="ms1_ms2_mgf_file" production="ms1_ms2_mgf_file"/>
    </bind>

    <bind action="copy_out_ms2_mgf" tool="copy_out_ms2_mgf">
        <inputAsRequirement port="results" requirement="results"/>
        <productionToOutput port="ms2_mgf_file" production="ms2_mgf_file"/>
    </bind>

    <bind action="copy_out_feature_table" tool="copy_out_feature_table">
        <inputAsRequirement port="results" requirement="results"/>
        <productionToOutput port="all_features_table" production="all_features_table"/>
    </bind>

    <bind action="copy_out_all_feature_table" tool="copy_out_all_feature_table">
        <inputAsRequirement port="results" requirement="results"/>
        <productionToOutput port="all_features_table" production="all_features_table"/>
    </bind>

    <!-- Molecular Networking -->
    <bind action="prep_molecular_networking_parameters" tool="prep_molecular_networking_parameters">
        <inputAsRequirement port="mgf_file" requirement="mgf_file"/>
        <inputAsRequirement port="workflowParameters" requirement="workflowParameters"/>
        <productionToOutput port="networking_parameters" production="networking_parameters"/>
    </bind>

    <bind action="molecular_networking_parallel_step" tool="molecular_networking_parallel_step">
        <inputAsRequirement port="networking_parameters" requirement="networking_parameters"/>
        <inputAsRequirement port="mgf_file" requirement="mgf_file"/>
        <inputAsRequirement port="workflowParameters" requirement="workflowParameters"/>
        <productionToOutput port="networking_pairs_results_folder" production="networking_pairs_results_folder"/>
    </bind>

    <bind action="merge_networking_tsv_files" tool="merge_tsv_efficient">
        <inputAsRequirement port="networking_pairs_results_folder"       requirement="tsv_folder"/>
        <productionToOutput port="networking_pairs_results_file"           production="tsv_file"/>
    </bind>

    <bind action="filter_networking_edges" tool="filter_networking_edges">
        <inputAsRequirement port="workflowParameters" requirement="workflowParameters"/>
        <inputAsRequirement port="networking_pairs_results_file"       requirement="networking_pairs_results_file"/>
        <productionToOutput port="networking_pairs_results_file_filtered"           production="networking_pairs_results_file_filtered"/>
    </bind>

    <!-- Library Search -->
    <bind action="prep_molecular_librarysearch_parameters" tool="prep_molecular_librarysearch_parameters">
        <inputAsRequirement port="workflowParameters" requirement="workflowParameters"/>
        <inputAsRequirement port="library" requirement="library"/>
        <productionToOutput port="librarysearch_parameters" production="librarysearch_parameters"/>
    </bind>

    <bind action="molecular_librarysearch_parallel_step" tool="molecular_librarysearch_parallel_step">
        <inputAsRequirement port="librarysearch_parameters" requirement="librarysearch_parameters"/>
        <inputAsRequirement port="mgf_file" requirement="mgf_file"/>
        <inputAsRequirement port="library" requirement="library"/>
        <inputAsRequirement port="workflowParameters" requirement="workflowParameters"/>
        <productionToOutput port="librarysearch_results_folder" production="librarysearch_results_folder"/>
    </bind>

    <bind action="merge_librarysearch_tsv_files" tool="merge_tsv_efficient">
        <inputAsRequirement port="librarysearch_results_folder"       requirement="tsv_folder"/>
        <productionToOutput port="librarysearch_results_file"           production="tsv_file"/>
    </bind>

    <bind action="molecular_librarysearch_get_dbannotations" tool="molecular_librarysearch_get_dbannotations">
		<inputAsRequirement port="librarysearch_results_file"             requirement="librarysearch_results_file"/>
		<productionToOutput port="librarysearch_results_file_DB"           production="librarysearch_results_file_DB"/>
	</bind>

    <!-- Cluster Info -->
    <bind action="enrich_metadata_table" tool="enrich_metadata_table">
		<inputAsRequirement port="workflowParameters"             requirement="workflowParameters"/>
        <inputAsRequirement port="metadata_table"             requirement="metadata_table"/>
		<productionToOutput port="enriched_metadata_table"           production="enriched_metadata_table"/>
	</bind>

    <bind action="clusterinfosummary_creation" tool="clusterinfosummary_creation">
		<inputAsRequirement port="quantification_table"             requirement="quantification_table"/>
        <inputAsRequirement port="metadata_table"             requirement="metadata_table"/>
		<productionToOutput port="clusterinfo_summary"           production="clusterinfo_summary"/>
	</bind>

    <bind action="enrich_clusterinfo_summary" tool="enrich_clusterinfo_summary">
  		<inputAsRequirement port="clusterinfo_summary"             requirement="clusterinfo_summary"/>
      <inputAsRequirement port="librarysearch_results_file_DB"             requirement="librarysearch_results_file_DB"/>
      <inputAsRequirement port="networking_pairs_results_file_filtered"             requirement="networking_pairs_results_file_filtered"/>
  		<productionToOutput port="clusterinfo_summary_enriched"           production="clusterinfo_summary_enriched"/>
      <productionToOutput port="components_table"           production="components_table"/>
  	</bind>

    <bind action="metabolomics_convert_graphml" tool="metabolomics_convert_graphml">
  		<inputAsRequirement port="networking_pairs_results_file_filtered"             requirement="networking_pairs_results_file_filtered"/>
      <inputAsRequirement port="clusterinfo_summary_enriched"             requirement="clusterinfo_summary_enriched"/>
      <inputAsRequirement port="librarysearch_results_file_DB"             requirement="librarysearch_results_file_DB"/>
  		<productionToOutput port="gnps_molecular_network_graphml"           production="gnps_molecular_network_graphml"/>
  	</bind>


    <!-- Outputting BIOM Format -->
    <bind action="metabolomics_convert_biom" tool="metabolomics_convert_biom">
  		<inputAsRequirement port="all_features_table"             requirement="all_features_table"/>
  		<productionToOutput port="biom_output"           production="biom_output"/>
  	</bind>



    <bind action="end" type="upload">
        <url value="{livesearch.upload}"/>
        <query name="task" valueRef="@task"/>
        <contentQuery name="content"/>
        <compression type="zip"/>
        <upload port="librarysearch_results_file_DB" type="folder">
            <query name="resource" value="DB_result"/>
        </upload>
        <upload port="networking_pairs_results_file_filtered" type="folder">
            <query name="resource" value="networking_pairs_results_file_filtered"/>
        </upload>
        <upload port="ms2_mgf_file" type="folder">
            <query name="resource" value="spectra"/>
        </upload>
        <upload port="ms1_ms2_mgf_file" type="folder">
            <query name="resource" value="ms1_ms2_mgf_file"/>
        </upload>
        <upload port="ms2_features_table" type="folder">
            <query name="resource" value="ms2_features_table"/>
        </upload>
        <upload port="all_features_table" type="folder">
            <query name="resource" value="all_features_table"/>
        </upload>
        <upload port="clusterinfo_summary" type="folder">
            <query name="resource" value="clusterinfo_summary"/>
        </upload>
        <upload port="clusterinfo_summary_enriched" type="folder">
            <query name="resource" value="clusterinfo_summary_enriched"/>
        </upload>
        <upload port="components_table" type="folder">
            <query name="resource" value="components_table"/>
        </upload>
        <upload port="gnps_molecular_network_graphml" type="folder">
            <query name="resource" value="gnps_molecular_network_graphml"/>
        </upload>
        <upload port="biom_output" type="folder">
            <query name="resource" value="biom_output"/>
        </upload>
    </bind>
</binding>
